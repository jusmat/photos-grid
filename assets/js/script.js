// Generated by CoffeeScript 1.4.0
(function() {

  window.CellFiller = (function() {

    function CellFiller(shot) {
      this.shot = shot;
    }

    CellFiller.prototype.divCreator = function(className) {
      var div;
      div = document.createElement('div');
      div.className = className;
      return div;
    };

    CellFiller.prototype.nodeCreator = function() {
      return this.divCreator('card');
    };

    CellFiller.prototype.overlayCreator = function() {
      return this.divCreator('overlay');
    };

    CellFiller.prototype.titleCreator = function() {
      var title;
      title = this.divCreator('title');
      return title.appendChild(document.createTextNode(this.shot.title));
    };

    CellFiller.prototype.authorCreator = function() {
      var author;
      author = this.divCreator('author');
      return author.appendChild(document.createTextNode(this.shot.user.name));
    };

    CellFiller.prototype.imageCreator = function() {
      var image, image_url;
      image = document.createElement('img');
      image_url = this.retina() ? this.shot.images.hidpi : this.shot.images.normal;
      this.preloadImage(image_url, image);
      return image;
    };

    CellFiller.prototype.preloadImage = function(image_url, original_image) {
      var image_preloader;
      original_image.src = 'loader.gif';
      image_preloader = new Image;
      image_preloader.src = image_url;
      if (image_preloader.complete) {
        original_image.src = image_url;
        image_preloader.onload = function() {};
      } else {
        image_preloader.onload = function() {
          original_image.src = image_url;
          image_preloader.onload = function() {};
        };
      }
    };

    CellFiller.prototype.lineCreator = function() {
      return document.createElement('hr');
    };

    CellFiller.prototype.buttonCreator = function() {
      var button;
      button = this.divCreator('button');
      button.id = this.shot.id;
      button.appendChild(document.createTextNode('Favorite'));
      FavoritesManager.updateButton(button);
      return button;
    };

    CellFiller.prototype.isHighDensity = function() {
      return window.matchMedia && (window.matchMedia('only screen and (min-resolution: 124dpi), only screen and (min-resolution: 1.3dppx), only screen and (min-resolution: 48.8dpcm)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (min-device-pixel-ratio: 1.3)').matches) || window.devicePixelRatio && window.devicePixelRatio > 1.3;
    };

    CellFiller.prototype.isRetina = function() {
      return (window.matchMedia && (window.matchMedia('only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx), only screen and (min-resolution: 75.6dpcm)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min--moz-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)').matches) || window.devicePixelRatio && window.devicePixelRatio >= 2) && /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
    };

    CellFiller.prototype.retina = function() {
      return this.isHighDensity() || this.isRetina();
    };

    CellFiller.prototype.fill = function() {
      var author, button, image, line, node, overlay, title;
      node = this.nodeCreator();
      overlay = this.overlayCreator();
      image = this.imageCreator();
      node.appendChild(image);
      node.appendChild(overlay);
      title = this.titleCreator();
      author = this.authorCreator();
      line = this.lineCreator();
      button = this.buttonCreator();
      overlay.appendChild(title);
      overlay.appendChild(line);
      overlay.appendChild(author);
      overlay.appendChild(button);
      return document.getElementById('container').appendChild(node);
    };

    return CellFiller;

  })();

  window.ContentFiller = (function() {

    function ContentFiller(data) {
      this.data = data;
    }

    ContentFiller.prototype.fill = function() {
      return this.data.forEach(function(shot) {
        return new CellFiller(shot).fill();
      });
    };

    return ContentFiller;

  })();

  window.FavoritesManager = (function() {

    function FavoritesManager() {}

    FavoritesManager.favorites = function() {
      var favs;
      favs = sessionStorage.getItem('favorites');
      if (favs) {
        return favs.split(',');
      } else {
        return [];
      }
    };

    FavoritesManager.toggleFavorite = function(id) {
      var favorite_ids;
      favorite_ids = this.favorites();
      if (favorite_ids.indexOf(id) > -1) {
        favorite_ids.splice(favorite_ids.indexOf(id), 1);
      } else {
        favorite_ids.push(id);
      }
      return sessionStorage.setItem('favorites', favorite_ids);
    };

    FavoritesManager.updateButton = function(button) {
      var favorite_ids;
      favorite_ids = this.favorites();
      if (favorite_ids.indexOf(button.id) > -1) {
        return button.innerHTML = 'Unfavorite';
      } else {
        return button.innerHTML = 'Favorite';
      }
    };

    return FavoritesManager;

  })();

  window.Loader = (function() {

    function Loader() {
      this.request_maker = new RequestMaker;
      this.favorites_manager = FavoritesManager;
    }

    Loader.prototype.load = function() {
      this.doRequest();
      this.bindScrollListener();
      return this.bindFavoriteAction();
    };

    Loader.prototype.scrollOffset = function() {
      return document.body.scrollTop + window.innerHeight;
    };

    Loader.prototype.pageHeight = function() {
      return Math.max(document.body.scrollHeight, document.body.offsetHeight, document.body.clientHeight);
    };

    Loader.prototype.bindScrollListener = function() {
      var _this = this;
      return document.addEventListener('scroll', function(event) {
        if (_this.pageHeight() <= _this.scrollOffset()) {
          return _this.doRequest();
        }
      });
    };

    Loader.prototype.bindFavoriteAction = function() {
      var that;
      that = this;
      return document.addEventListener('click', function(event) {
        that.favorites_manager.toggleFavorite(event.target.id);
        return that.favorites_manager.updateButton(event.target);
      });
    };

    Loader.prototype.doRequest = function() {
      return this.request_maker.load_data();
    };

    return Loader;

  })();

  window.RequestMaker = (function() {

    function RequestMaker() {
      this.xmlhttp = new XMLHttpRequest;
      this.page = 1;
      this.bindRequestListener();
    }

    RequestMaker.prototype.bindRequestListener = function() {
      var _this = this;
      return this.xmlhttp.onreadystatechange = function() {
        if (_this.xmlhttp.readyState === XMLHttpRequest.DONE && _this.xmlhttp.status === 200) {
          return _this.fillData();
        }
      };
    };

    RequestMaker.prototype.fillData = function() {
      this.page += 1;
      return new ContentFiller(this.response()).fill();
    };

    RequestMaker.prototype.response = function() {
      return JSON.parse(this.xmlhttp.response);
    };

    RequestMaker.prototype.gather_data = function() {
      this.xmlhttp.open('GET', this.url(), true);
      return this.xmlhttp.send();
    };

    RequestMaker.prototype.load_data = function() {
      return this.gather_data();
    };

    RequestMaker.prototype.url = function() {
      return "https://api.dribbble.com/v1/shots?access_token=efa901b48f971a1d84713a305fbda01cde0d94362d33dc3b37de1aabc16a3401&page=" + this.page + "&per_page=20";
    };

    return RequestMaker;

  })();

}).call(this);
